---
- name: Install kubeadm packages
  ansible.builtin.apt:
    name:
      - haproxy
      - kubeadm={{ kubernetes_version }}-00
      - kubectl={{ kubernetes_version }}-00
    state: present

- name: Install hatop package (not on focal)
  ansible.builtin.apt:
    name:
      - hatop
    state: present
    force: true
  # hatop is not available on Ubuntu 20.04 "Focal Fossa" but got re-added later
  when: ansible_distribution == "Debian" or (ansible_distribution_major_version | int) != 20

- name: Add hatop config for shells (not on focal)
  loop:
    - zsh
    - bash
  ansible.builtin.blockinfile:
    path: /root/.{{ item }}rc
    create: true
    marker: "### {mark} ANSIBLE MANAGED BLOCK for hatop ###"
    content: |
      alias hatop="hatop -s /var/run/haproxy/admin.sock"
  when: ansible_distribution == "Debian" or (ansible_distribution_major_version | int) != 20

- name: Disable automatic upgrades for kubeadm/kubectl
  loop:
    - kubeadm
    - kubectl
  ansible.builtin.dpkg_selections:
    name: "{{ item }}"
    selection: hold

- name: Add kubeadm config for shells
  loop:
    - zsh
    - bash
  ansible.builtin.blockinfile:
    path: /root/.{{ item }}rc
    create: true
    marker: "### {mark} ANSIBLE MANAGED BLOCK for kubeadm ###"
    content: |
      source <(kubeadm completion {{ item }})

- name: Configure haproxy
  ansible.builtin.template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
  register: haproxy_config

- name: Restart haproxy if necessary
  ansible.builtin.systemd:
    name: haproxy
    state: restarted
    enabled: true
  # noqa no-handler - this needs to run right here
  when: haproxy_config is changed

- name: Start and enable haproxy
  ansible.builtin.systemd:
    name: haproxy
    state: started
    enabled: true

## loading the modules temporarly because kubeadm will complain if they are not there
#  but i don't think it is necessary to make this persistent, also ignoring changes here
- name: Load module br_netfilter to satisfy kubeadm init/join
  community.general.modprobe:
    name: br_netfilter
    state: present
  changed_when: false

- name: Enable IPv4 forwarding for cilium
  ansible.posix.sysctl:
    name: net.ipv4.ip_forward
    value: "1"
    sysctl_set: true
    state: present
    reload: true
